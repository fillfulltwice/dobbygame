export const RECIPES = {
    // Only simplified basic list is used now; other categories cleared
    basic: {
        steam: ['fire','water'],
        lava: ['fire','earth'],
        energy: ['fire','air'],
        plant: ['earth','water'],
        metal: ['stone','fire'],
        mud: ['earth','water']
    },
    absurd: {},
    alchemy: {},
    categories: {}
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤
export function getAllRecipes() {
    return {
        ...RECIPES.basic
    };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–µ—Ü–µ–ø—Ç–∞
import { getAllElements } from './elements.js';

export function findRecipe(ingredients) {
    const allRecipes = getAllRecipes();
    for (const [result, recipe] of Object.entries(allRecipes)) {
        if (matchRecipe(ingredients, recipe)) return result;
    }
    return null;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ä–µ—Ü–µ–ø—Ç–∞
function matchRecipe(ingredients, recipe) {
    if (ingredients.length !== recipe.length) return false;
    
    const ingredientsCopy = [...ingredients];
    for (const item of recipe) {
        const index = ingredientsCopy.indexOf(item);
        if (index === -1) return false;
        ingredientsCopy.splice(index, 1);
    }
    
    return ingredientsCopy.length === 0;
}

// –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–∞
export function getRecipeHint(element, trustLevel) {
    const allRecipes = getAllRecipes();
    const recipe = allRecipes[element];
    
    if (!recipe) return null;
    
    // –†–∞–∑–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–æ–≤–µ—Ä–∏—è
    if (trustLevel < 30) {
        return { 
            ru: '–ì–∞–≤! –≠—Ç–æ —Å–µ–∫—Ä–µ—Ç! –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥—Ä—É–∂–∏—Å—å —Å–æ –º–Ω–æ–π!',
            en: 'Woof! That\'s a secret! Be my friend first!'
        };
    } else if (trustLevel < 60) {
        // –î–∞—ë–º –ø–æ–¥—Å–∫–∞–∑–∫—É –æ–± –æ–¥–Ω–æ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–µ
        const hint = recipe[Math.floor(Math.random() * recipe.length)];
        return {
            ru: `–•–º... –ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —Ç—É—Ç –Ω—É–∂–µ–Ω ${hint}... –∏–ª–∏ –Ω–µ—Ç? –ì–∞–≤!`,
            en: `Hmm... I think you need ${hint}... or not? Woof!`
        };
    } else {
        // –î–∞—ë–º –∑–∞–≥–∞–¥–æ—á–Ω—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É –æ –¥–≤—É—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞—Ö
        const hints = recipe.slice(0, 2);
        return {
            ru: `–ö–æ–≥–¥–∞ ${hints[0]} –≤—Å—Ç—Ä–µ—á–∞–µ—Ç ${hints[1]}... –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á—Ç–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ! üêï`,
            en: `When ${hints[0]} meets ${hints[1]}... something special happens! üêï`
        };
    }
}
